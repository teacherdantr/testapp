
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum QuestionType {
  MCQ
  MultipleChoiceMultipleAnswer
  MultipleTrueFalse
  MatrixChoice
  Hotspot
  MatchingSelect
  ShortAnswer
  TrueFalse
}

enum HotspotShapeType {
  Rectangle
  Circle
  Polygon
}

model Test {
  id          String      @id @default(cuid())
  title       String
  description String?
  password    String?
  questions   Question[]
  userScores  UserScore[] // Relation to UserScore
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Question {
  id           String       @id @default(cuid())
  testId       String
  test         Test         @relation(fields: [testId], references: [id], onDelete: Cascade)
  text         String
  type         QuestionType
  imageUrl     String?
  points       Int
  questionData Json // Stores options, statements, correctAnswer, hotspots, etc.
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@index([testId])
}

model UserScore {
  id                     String   @id @default(cuid())
  userId                 String
  testId                 String
  test                   Test     @relation(fields: [testId], references: [id], onDelete: Cascade)
  testTitle              String   // Renamed from testTitleSnapshot
  score                  Int
  totalPoints            Int
  questionResultsDetails Json // Stores the detailed TestResult.questionResults array
  timeTakenSeconds       Int?
  testMode               String? // e.g., 'training', 'testing', 'race'
  submittedAt            DateTime @default(now())

  @@index([userId])
  @@index([testId])
}
