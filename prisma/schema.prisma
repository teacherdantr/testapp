generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
}

// Enums
enum QuestionType {
  MCQ
  MultipleChoiceMultipleAnswer
  MultipleTrueFalse
  MatrixChoice
  Hotspot
  MatchingSelect
  ShortAnswer
  TrueFalse
  MatchingDragAndDrop // ✅ Added safely
}

// ✅ Keep original enum values to prevent breaking existing data
enum HotspotShapeType {
  Rectangle
  Circle
  Polygon
}

// Models
model Test {
  id          String      @id @default(cuid())
  title       String
  description String?
  password    String?
  questions   Question[]
  userScores  UserScore[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Question {
  id           String       @id @default(cuid())
  testId       String
  test         Test         @relation(fields: [testId], references: [id], onDelete: Cascade)
  text         String
  type         QuestionType
  imageUrl     String?
  points       Int
  questionData Json
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@index([testId])
}

model UserScore {
  id                     String   @id @default(cuid())
  userId                 String
  testId                 String
  test                   Test     @relation(fields: [testId], references: [id], onDelete: Cascade)
  testTitle              String
  score                  Int
  totalPoints            Int
  questionResultsDetails Json
  timeTakenSeconds       Int?
  testMode               String?
  submittedAt            DateTime @default(now())

  @@index([userId])
  @@index([testId])
}

model RedirectLink {
  id        String   @id @default(cuid())
  slug      String   @unique
  url       String
  clicks    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
